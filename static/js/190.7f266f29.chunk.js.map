{"version":3,"file":"static/js/190.7f266f29.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://for-conducting-tests/./src/components/QuestionForm/QuestionForm.module.css?7e5a","components/QuestionForm/QuestionForm.jsx","components/App.jsx","pages/QuestionForm.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"QuestionForm_formTitle__Gj1BR\",\"title__label_topic\":\"QuestionForm_title__label_topic__JDkYV\",\"title__label\":\"QuestionForm_title__label__PSi6P\",\"title__labelforCheck\":\"QuestionForm_title__labelforCheck__2M8Ts\",\"item__container\":\"QuestionForm_item__container__o9tqi\",\"form__container\":\"QuestionForm_form__container__4mQKo\",\"form__Container\":\"QuestionForm_form__Container__5SJyg\",\"flexrow\":\"QuestionForm_flexrow__dMI4t\",\"input_active\":\"QuestionForm_input_active__JDUds\",\"form_submit\":\"QuestionForm_form_submit__GmBe6\",\"flexrow_check\":\"QuestionForm_flexrow_check__Aj3u9\",\"title__input_check\":\"QuestionForm_title__input_check__90yLn\",\"grid__container\":\"QuestionForm_grid__container__ORl3L\",\"grid_container1\":\"QuestionForm_grid_container1__b9QF8\",\"grid_container2\":\"QuestionForm_grid_container2__7w+nu\",\"grid_container3\":\"QuestionForm_grid_container3__YwJcG\",\"grid_container4\":\"QuestionForm_grid_container4__7vtBp\",\"select_course\":\"QuestionForm_select_course__ikFbi\"};","import {useState} from \"react\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { nanoid } from 'nanoid';\nimport { MDBCol } from 'mdb-react-ui-kit';\nimport css from \"./QuestionForm.module.css\";\n\nconst initial_state = {\n    question: \"\",\n    topic: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    answer4: \"\",\n    correctAnswer:\"\",\n}\nconst dataBase = getDatabase()\nfunction  QuestionForm  () {\n\n    const [questionForm, setQuestionForm] = useState(initial_state);\n\nfunction handleChangeForm  (event) {\n    const {name, value} = event.target;\n    console.log(name, value);\n    return setQuestionForm(questionForm=>({...questionForm, [name]:value}));\n}\n\nconst handleFormSubmit  = async(event) => {\n    event.preventDefault();\n    console.log(questionForm);\n    // додає питання до БД \n    const id = nanoid();\n      set(ref(dataBase, questionForm.topic+'/'+ id), {\n        ...questionForm, id\n      });\n\n    resetForm ();\n\n}\n\n\nfunction resetForm () {\n    setQuestionForm(initial_state)\n}\n      return(\n        <form onSubmit={handleFormSubmit} className={css.form__Container}>\n            <MDBCol className={css.form__container}>\n            <p className={css.formTitle}>Add question form</p>\n            <div className={css.flexrow}>\n            <label className={`${css.title__label} ${css.title__label_topic}`}>Topic of question\n                <select required\n                className={css.select_course}\n                name=\"topic\"\n                id =\"topic\"\n                value={questionForm.topic}\n                onChange = {handleChangeForm}\n                >\n                <option value=\"\">--Please choose an option--</option>\n                <option value=\"react\">React</option>\n                <option value=\"js\">JS</option>\n                <option value=\"html\">HTML</option>\n                <option value=\"css\">CSS</option>\n                </select>\n            </label>\n            </div>\n            <div className={css.flexrow}>\n   \n            <label className={css.title__label}>Question\n                <input  className={css.input_active}\n                type=\"text\"   \n                name=\"question\"\n                value={questionForm.question}\n                onChange = {handleChangeForm}\n                required/>\n            </label>\n            </div>\n            \n            <div className={css.grid__container}>\n                <div className={css.grid_container1}>\n                    <div className={css.flexrow}>\n                        <label className={css.title__label}>Answer option 1\n                            <div className={css.item__container}>\n                                <input className={css.input_active}\n                                type=\"text\"\n                                name=\"answer1\"\n                                value={questionForm.answer1}\n                                onChange = {handleChangeForm}\n                                required/>\n                            </div>\n                        </label>\n                    </div>\n                    <div className={css.flexrow_check}>\n                        <label className={css.title__label_check}>\n                            <input className={css.title__input_check} type=\"radio\" name=\"correctAnswer\" value=\"answer1\" id=\"answer1\" onChange={handleChangeForm}></input>Correct answer</label>\n                    </div>\n                </div>\n\n                <div className={css.grid_container2}>\n                    <div className={css.flexrow}>\n                        <label className={css.title__label}>Answer option 2\n                            <div className={css.item__container}>\n                                <input className={css.input_active}\n                                type=\"text\"\n                                name=\"answer2\"\n                                value={questionForm.answer2}\n                                onChange = {handleChangeForm}\n                                required/>\n                            </div>\n                        </label>\n                    </div>\n                    <div className={css.flexrow_check}>\n                        <label className={css.title__label_check}>\n                            <input type=\"radio\" className={css.title__input_check} name=\"correctAnswer\" value=\"answer2\" id=\"answer2\" onChange={handleChangeForm}></input> Correct answer</label>\n                    </div>\n                </div>\n\n                <div className={css.grid_container3}>\n                    <div className={css.flexrow}>\n                        <label className={css.title__label}>Answer option 3\n                            <div className={css.item__container}>\n                                <input className={css.input_active}\n                                type=\"text\"\n                                name=\"answer3\"\n                                value={questionForm.answer3}\n                                onChange = {handleChangeForm}\n                                required/>\n                            </div>\n                        </label>\n                    </div>\n                    <div className={css.flexrow_check}>\n                        <label className={css.title__label_check}>\n                            <input type=\"radio\"  className={css.title__input_check} name=\"correctAnswer\" value=\"answer3\" id=\"answer3\" onChange={handleChangeForm}></input>Correct answer</label>\n                    </div>\n                </div>\n\n                <div className={css.grid_container4}>\n                    <div className={css.flexrow}>\n                        <label className={css.title__label}>Answer option 4\n                            <div className={css.item__container}>\n                                <input \n                                className={css.input_active}\n                                type=\"text\"\n                                name=\"answer4\"\n                                value={questionForm.answer4}\n                                onChange = {handleChangeForm}\n                                required/>\n                            </div>\n                        </label>\n                    </div>\n                    <div className={css.flexrow_check}>\n                        <label className={css.title__label_check}>\n                            <input type=\"radio\" className={css.title__input_check} name=\"correctAnswer\" value=\"answer4\" id=\"answer4\" onChange={handleChangeForm}></input>Correct answer</label>\n                    </div>\n                </div>\n                \n            </div>\n            <button type='submit' className={css.form_submit}>Add question</button>\n            </MDBCol>\n        </form>)\n        \n    }\n\nexport default QuestionForm\n","import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n// import { fetchContacts } from \"redux/operations\";\nimport { refreshUser } from \"../redux/auth/operations\"\nimport QuestionForm from './QuestionForm/QuestionForm';\n\n\nexport default function App () {\nconst dispatch = useDispatch();\n\n    // useEffect(() => {\n    //   dispatch(fetchContacts());\n    // }, [dispatch]);\n\n    useEffect(() => {\n      dispatch(refreshUser());\n    }, [dispatch]);\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n          color: '#010101'\n        }}>\n  \n  <div className=\"list_section\">\n  <QuestionForm/>\n  </div>\n    </div>\n    )\n  }\n  ","\nimport App from '../components/App';\n\nexport default function Contacts () {\n  return (\n    <>\n      <App />\n    </>\n  );\n}"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","initial_state","question","topic","answer1","answer2","answer3","answer4","correctAnswer","dataBase","getDatabase","useState","questionForm","setQuestionForm","handleChangeForm","event","target","name","value","console","log","handleFormSubmit","preventDefault","set","ref","onSubmit","className","css","required","onChange","type","App","dispatch","useDispatch","useEffect","refreshUser","style","display","justifyContent","alignItems","fontSize","color","Contacts"],"sourceRoot":""}